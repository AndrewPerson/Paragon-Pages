on: 
  push:
    branches:
      - main
  
  workflow_dispatch:
    inputs:
      directories:
        description: JSON array of directories to rebuild and upload.
        type: string
        required: true

jobs:
  generate-deploy-matrix:
    runs-on: ubuntu-latest

    name: Generate deploy matrix from changed Pages

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get changed files
        uses: lots0logs/gh-action-get-changed-files@2.1.4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        if: inputs.directories == null

      - name: Write directories to upload
        run: echo '${{ inputs.directories }}' > $HOME/files.json
        if: inputs.directories != null

      - name: Install Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      # This step uses the file in ${HOME}/files.json outputted by the previous step
      - name: Generate deploy matrix
        id: generate-matrix
        run: echo "::set-output name=matrix::$(node generate-deploy-matrix.js)"

      - name: Print matrix
        run: echo '${{ steps.generate-matrix.outputs.matrix }}'

    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}

  deploy:
    # Check if length of array is not 0, as github actions doesn't like that.
    # Previous job outputs null if array is empty
    if: needs.generate-deploy-matrix.outputs.matrix.project != null

    needs: generate-deploy-matrix

    runs-on: ubuntu-latest

    name: Deploy changed Pages to Cloudflare Pages

    permissions:
      contents: read
      deployments: write

    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-deploy-matrix.outputs.matrix) }}
    
    steps:
      - name: Navigate to directory
        run: cd ${{ matrix.project.directory }}

      - name: Build
        run: ${{ matrix.project.build }}
        if: matrix.project.build != null

      - name: Navigate out of directory if the root directory needs to be uploaded
        run: cd ..
        if: matrix.project.upload == null
        
      - name: Publish root folder for Page
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ matrix.project.name }}
          directory: ${{ matrix.project.directory }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
        if: matrix.project.upload == null
      
      - name: Publish subfolder for Page
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ matrix.project.name }}
          directory: ${{ matrix.project.upload }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
        if: matrix.project.upload != null